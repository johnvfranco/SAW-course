import "SHA512.cry";

let alloc_init ty v = do {
  p <- llvm_alloc ty;
  llvm_points_to p v;
  return p;
};

let pointer_to_fresh n ty = do {
  x <- llvm_fresh_var n ty;
  p <- alloc_init ty (llvm_term x);
  return (x, p);
};

let Sigma0_setup = do {
  x <- llvm_fresh_var "x" (llvm_int 64);
  llvm_execute_func [llvm_term x];
  llvm_return (llvm_term {{ SIGMA_0 x }});
};

let Sigma1_setup = do {
  x <- llvm_fresh_var "x" (llvm_int 64);
  llvm_execute_func [llvm_term x];
  llvm_return (llvm_term {{ SIGMA_1 x }});
};

let sigma0_setup = do {
  x <- llvm_fresh_var "x" (llvm_int 64);
  llvm_execute_func [llvm_term x];
  llvm_return (llvm_term {{ sigma_0 x }});
};

let sigma1_setup = do {
  x <- llvm_fresh_var "x" (llvm_int 64);
  llvm_execute_func [llvm_term x];
  llvm_return (llvm_term {{ sigma_1 x }});
};

let sha512_block_data_order_setup = do {
  (state,state_ptr) <- pointer_to_fresh "state" (llvm_array 8 (llvm_int 64));
  (data,data_ptr) <- pointer_to_fresh "data" (llvm_array 128 (llvm_int 8));

  llvm_execute_func [state_ptr, data_ptr, llvm_term {{ 1 : [64] }}];

  llvm_points_to state_ptr (llvm_term {{ processBlock_Common state (split (join data)) }});
};

let main : TopLevel () = do {
  m <- llvm_load_module "sha512.bc";
  Sigma0_ov <- llvm_verify m "Sigma0" [] false Sigma0_setup z3;
  Sigma1_ov <- llvm_verify m "Sigma1" [] false Sigma1_setup z3;
  sigma0_ov <- llvm_verify m "sigma0" [] false sigma0_setup z3;
  sigma1_ov <- llvm_verify m "sigma1" [] false sigma1_setup z3;
  sha512_bdo_ov <- llvm_verify m "sha512_block_data_order"
    [Sigma0_ov, Sigma1_ov, sigma0_ov, sigma1_ov] false
    sha512_block_data_order_setup
    (w4_unint_z3 ["SIGMA_0", "SIGMA_1", "sigma_0", "sigma_1"]);
  print "Done!";
};
